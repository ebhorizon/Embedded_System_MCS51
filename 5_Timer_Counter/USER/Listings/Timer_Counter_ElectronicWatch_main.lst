<<<<<<< HEAD
C51 COMPILER V9.57.0.0   TIMER_COUNTER_ELECTRONICWATCH_MAIN                                05/29/2020 10:55:33 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE TIMER_COUNTER_ELECTRONICWATCH_MAIN
OBJECT MODULE PLACED IN ..\OBJ\Timer_Counter_ElectronicWatch_main.obj
COMPILER INVOKED BY: e:\Keil_v5\C51\BIN\C51.EXE Timer_Counter_ElectronicWatch_main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\
                    -HARDWARE) DEBUG OBJECTEXTEND PRINT(.\Listings\Timer_Counter_ElectronicWatch_main.lst) OBJECT(..\OBJ\Timer_Counter_Electr
                    -onicWatch_main.obj)

line level    source

   1          /* 简易电子表 */
   2          
   3          #include <reg52.h>
   4          #include "74xx138.h"
   5          
   6          typedef unsigned char u8;                       // 0 ~ 255
   7          typedef unsigned int  u16;                      // 0 ~ 65535
   8          typedef unsigned long u32;                      // 0 ~ 4294967295
   9          
  10          #define SEG_SEL P0                                      // 段选引脚
  11          
  12          //--下面两个宏定义便于调试--//
  13          #define TIMING                  50000           // 定时器的计时时间，默认为50ms(50000)
  14          #define TIMING_COUNT    20                      // 定时器的计时个数，默认为20
  15          
  16          //--共阴数码管段选，从0到9--//
  17          u8 code segCC_SegSel[10] = {0x3f, 0x06, 0x5b, 0x4f, 0x66, 0x6d, 0x7d, 0x07, 0x7f, 0x6f};
  18          //--数码管显示数据，00-00-00--//
  19          u8 DisplayCode[8]        = {0x3f, 0x3f, 0x40, 0x3f, 0x3f, 0x40, 0x3f, 0x3f};
  20          //--存储时间戳的变量--//
  21          u32 timestamp  = 0;
  22          
  23          void Delay1ms(u16 n)
  24          {
  25   1          u8 i, j;
  26   1          for(i = 0; i < n; i++)
  27   1                      for(j = 0; j < 125; j++);
  28   1      }
  29          
  30          void SegDisplay()
  31          {         
  32   1              u8 i;
  33   1              
  34   1              for(i = 0; i < 8; i++)
  35   1              {
  36   2                      _74XX138_SetLow(i);
  37   2                      SEG_SEL = DisplayCode[i];
  38   2                      Delay1ms(1);
  39   2                      
  40   2                      // 数码管消隐
  41   2                      SEG_SEL = 0x00;
  42   2              }
  43   1      }
  44          
  45          void DisplayCode_Update()
  46          {
  47   1              u8 disHour   = timestamp / 60 / 60;
  48   1              u8 disMinute = timestamp / 60 % 60;
  49   1              u8 disSecond = timestamp % 60;
  50   1              
  51   1              DisplayCode[0] = segCC_SegSel[disHour   / 10];
  52   1              DisplayCode[1] = segCC_SegSel[disHour   % 10];
  53   1              DisplayCode[3] = segCC_SegSel[disMinute / 10];
C51 COMPILER V9.57.0.0   TIMER_COUNTER_ELECTRONICWATCH_MAIN                                05/29/2020 10:55:33 PAGE 2   

  54   1              DisplayCode[4] = segCC_SegSel[disMinute % 10];
  55   1              DisplayCode[6] = segCC_SegSel[disSecond / 10];
  56   1              DisplayCode[7] = segCC_SegSel[disSecond % 10];
  57   1      }
  58          
  59          void Timer0Init()
  60          {
  61   1              /* 定时器0，工作方式1，或运算防止移植的时候影响其他定时器
  62   1                 方式1：16位加1计数器 */
  63   1              TMOD |= 0x01;
  64   1              
  65   1              // 打开定时器0
  66   1              TR0 = 1;
  67   1              
  68   1              /* 1. 使用12MHz晶振，时钟周期为1/12us，机器周期为(12 * 1 / 12) = 1us
  69   1                 2. 计数50ms = 50000us
  70   1                 3. TH = (2^16 - 50000) / (2^8) = 15536 / 256
  71   1                 4. TL = (2^16 - 50000) % (2^8) = 15536 % 256
  72   1                 5. 1s = 1000ms = 20 * 50ms */
  73   1              TH0 = (65536 - TIMING) / 256;
  74   1              TL0 = (65536 - TIMING) % 256;
  75   1              
  76   1              // 定时器0中断和总中断开关打开
  77   1              ET0 = 1;
  78   1              EA  = 1;
  79   1      }
  80          
  81          void main()
  82          {
  83   1              Timer0Init();
  84   1              
  85   1              while(1)
  86   1              {
  87   2                      SegDisplay();
  88   2                      DisplayCode_Update();
  89   2          }
  90   1      }
  91          
  92          void Timer0() interrupt 1
  93          {
  94   1              // 1s需要记录20个50ms
  95   1              static u8 tCount = 0;
  96   1              
  97   1              // 定时器0高低位的赋值
  98   1              TH0 = (65536 - TIMING) / 256;
  99   1              TL0 = (65536 - TIMING) % 256;
 100   1              
 101   1              // 累加并判断是否1s
 102   1              if(++tCount == TIMING_COUNT)
 103   1              {
 104   2                      // 累加并判断，时间为24-00-00 = 86400时清零
 105   2                      if(++timestamp == 86400) timestamp = 0;
 106   2                      // 重置1s计数
 107   2                      tCount = 0;
 108   2              }
 109   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    320    ----
   CONSTANT SIZE    =     10    ----
   XDATA SIZE       =   ----    ----
C51 COMPILER V9.57.0.0   TIMER_COUNTER_ELECTRONICWATCH_MAIN                                05/29/2020 10:55:33 PAGE 3   

   PDATA SIZE       =   ----    ----
   DATA SIZE        =     13       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
=======
C51 COMPILER V9.57.0.0   TIMER_COUNTER_ELECTRONICWATCH_MAIN                                05/29/2020 10:55:33 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE TIMER_COUNTER_ELECTRONICWATCH_MAIN
OBJECT MODULE PLACED IN ..\OBJ\Timer_Counter_ElectronicWatch_main.obj
COMPILER INVOKED BY: e:\Keil_v5\C51\BIN\C51.EXE Timer_Counter_ElectronicWatch_main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\
                    -HARDWARE) DEBUG OBJECTEXTEND PRINT(.\Listings\Timer_Counter_ElectronicWatch_main.lst) OBJECT(..\OBJ\Timer_Counter_Electr
                    -onicWatch_main.obj)

line level    source

   1          /* 简易电子表 */
   2          
   3          #include <reg52.h>
   4          #include "74xx138.h"
   5          
   6          typedef unsigned char u8;                       // 0 ~ 255
   7          typedef unsigned int  u16;                      // 0 ~ 65535
   8          typedef unsigned long u32;                      // 0 ~ 4294967295
   9          
  10          #define SEG_SEL P0                                      // 段选引脚
  11          
  12          //--下面两个宏定义便于调试--//
  13          #define TIMING                  50000           // 定时器的计时时间，默认为50ms(50000)
  14          #define TIMING_COUNT    20                      // 定时器的计时个数，默认为20
  15          
  16          //--共阴数码管段选，从0到9--//
  17          u8 code segCC_SegSel[10] = {0x3f, 0x06, 0x5b, 0x4f, 0x66, 0x6d, 0x7d, 0x07, 0x7f, 0x6f};
  18          //--数码管显示数据，00-00-00--//
  19          u8 DisplayCode[8]        = {0x3f, 0x3f, 0x40, 0x3f, 0x3f, 0x40, 0x3f, 0x3f};
  20          //--存储时间戳的变量--//
  21          u32 timestamp  = 0;
  22          
  23          void Delay1ms(u16 n)
  24          {
  25   1          u8 i, j;
  26   1          for(i = 0; i < n; i++)
  27   1                      for(j = 0; j < 125; j++);
  28   1      }
  29          
  30          void SegDisplay()
  31          {         
  32   1              u8 i;
  33   1              
  34   1              for(i = 0; i < 8; i++)
  35   1              {
  36   2                      _74XX138_SetLow(i);
  37   2                      SEG_SEL = DisplayCode[i];
  38   2                      Delay1ms(1);
  39   2                      
  40   2                      // 数码管消隐
  41   2                      SEG_SEL = 0x00;
  42   2              }
  43   1      }
  44          
  45          void DisplayCode_Update()
  46          {
  47   1              u8 disHour   = timestamp / 60 / 60;
  48   1              u8 disMinute = timestamp / 60 % 60;
  49   1              u8 disSecond = timestamp % 60;
  50   1              
  51   1              DisplayCode[0] = segCC_SegSel[disHour   / 10];
  52   1              DisplayCode[1] = segCC_SegSel[disHour   % 10];
  53   1              DisplayCode[3] = segCC_SegSel[disMinute / 10];
C51 COMPILER V9.57.0.0   TIMER_COUNTER_ELECTRONICWATCH_MAIN                                05/29/2020 10:55:33 PAGE 2   

  54   1              DisplayCode[4] = segCC_SegSel[disMinute % 10];
  55   1              DisplayCode[6] = segCC_SegSel[disSecond / 10];
  56   1              DisplayCode[7] = segCC_SegSel[disSecond % 10];
  57   1      }
  58          
  59          void Timer0Init()
  60          {
  61   1              /* 定时器0，工作方式1，或运算防止移植的时候影响其他定时器
  62   1                 方式1：16位加1计数器 */
  63   1              TMOD |= 0x01;
  64   1              
  65   1              // 打开定时器0
  66   1              TR0 = 1;
  67   1              
  68   1              /* 1. 使用12MHz晶振，时钟周期为1/12us，机器周期为(12 * 1 / 12) = 1us
  69   1                 2. 计数50ms = 50000us
  70   1                 3. TH = (2^16 - 50000) / (2^8) = 15536 / 256
  71   1                 4. TL = (2^16 - 50000) % (2^8) = 15536 % 256
  72   1                 5. 1s = 1000ms = 20 * 50ms */
  73   1              TH0 = (65536 - TIMING) / 256;
  74   1              TL0 = (65536 - TIMING) % 256;
  75   1              
  76   1              // 定时器0中断和总中断开关打开
  77   1              ET0 = 1;
  78   1              EA  = 1;
  79   1      }
  80          
  81          void main()
  82          {
  83   1              Timer0Init();
  84   1              
  85   1              while(1)
  86   1              {
  87   2                      SegDisplay();
  88   2                      DisplayCode_Update();
  89   2          }
  90   1      }
  91          
  92          void Timer0() interrupt 1
  93          {
  94   1              // 1s需要记录20个50ms
  95   1              static u8 tCount = 0;
  96   1              
  97   1              // 定时器0高低位的赋值
  98   1              TH0 = (65536 - TIMING) / 256;
  99   1              TL0 = (65536 - TIMING) % 256;
 100   1              
 101   1              // 累加并判断是否1s
 102   1              if(++tCount == TIMING_COUNT)
 103   1              {
 104   2                      // 累加并判断，时间为24-00-00 = 86400时清零
 105   2                      if(++timestamp == 86400) timestamp = 0;
 106   2                      // 重置1s计数
 107   2                      tCount = 0;
 108   2              }
 109   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    320    ----
   CONSTANT SIZE    =     10    ----
   XDATA SIZE       =   ----    ----
C51 COMPILER V9.57.0.0   TIMER_COUNTER_ELECTRONICWATCH_MAIN                                05/29/2020 10:55:33 PAGE 3   

   PDATA SIZE       =   ----    ----
   DATA SIZE        =     13       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
>>>>>>> 64c192fc79434a4be878e64dcbbf3fda3a7e4b5e
